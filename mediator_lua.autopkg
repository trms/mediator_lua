nuget {
	nuspec {
		id = mediator_lua;
		title: mediator_lua;
		version: 1.1.3.3;
		authors: {coapp, Olivine Labs, Tightrope Media Systems};
		owners: {Olivine Labs};

		licenseUrl: "http://opensource.org/licenses/MIT";
		licenseUrl: "http://opensource.org/licenses/MIT";
		projectUrl: "https://github.com/Olivine-Labs/mediator_lua/archive/v1.1.tar.gz";
		copyright: "Copyright (c) 2014 Olivine Labs, LLC.";
		
		requireLicenseAcceptance: false;
		summary: "mediator_lua allows you to subscribe and publish to a central object so you can decouple function calls in your application. It's as simple as mediator:subscribe("channel", function). Supports namespacing, predicates, and more..";
		releaseNotes: @"http://olivinelabs.com/mediator_lua"; 
		description: @"see summary.";
		tags: {native, Lua, module};
	}
	dependencies {
        // This node defines any outside items which may be needed to consume this package.
        packages : {
            // This is a list of other NuGet packages required to use this package.
            // Each item follows the format "<pkg_name>/<version>"
            lua/"[5.3, 5.4)",
        };
    }
	files {
		// declare a lua collection
		lua : {
			// copies the whole folder tree.
			#add-all-files : Items.mediatorDir;
			// set the destination in the package itself. 
			#destination : ${build_root}\mediator;
		};
		
		lua: .\src\*.lua;
    }

    targets {
		AfterBuild {
			.Copy {
				DestinationFolder = "$(TargetDir)lua";
				SourceFiles = "@(mediatorDir)";
				SkipUnchangedFiles = true;
			};
		};
	}
}